name: Vite Build Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  NODE_VERSION: '18.x'

jobs:
  # 构建 Vite 项目
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build with Vite
        run: npm run build
        
      - name: Check build output
        run: |
          echo "Checking build output..."
          if [ -d "dist" ]; then
            echo "✅ Build successful"
            echo "Build size:"
            du -sh dist/
            echo "Build contents:"
            ls -la dist/
            echo "Index file:"
            head -20 dist/index.html || echo "No index.html found"
          else
            echo "❌ Build failed - no dist directory"
            exit 1
          fi
          
      - name: Test build integrity
        run: |
          cd dist
          # 检查关键文件是否存在
          if [ -f "index.html" ]; then
            echo "✅ index.html exists"
          else
            echo "❌ index.html missing"
            exit 1
          fi
          
          # 检查静态资源
          if [ -d "assets" ]; then
            echo "✅ assets directory exists"
            echo "Assets count: $(find assets -type f | wc -l)"
          else
            echo "⚠️ assets directory missing"
          fi
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: vite-build-${{ github.sha }}
          path: dist/
          retention-days: 7
          
      - name: Create production package
        run: |
          # 创建生产环境部署包
          cd dist
          tar -czf ../production-build.tar.gz .
          cd ..
          
          # 创建包含构建信息的文件
          cat > build-info.json << EOF
          {
            "buildTime": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "commit": "${{ github.sha }}",
            "branch": "${{ github.ref_name }}",
            "nodeVersion": "${{ env.NODE_VERSION }}",
            "buildSize": "$(du -sh dist/ | cut -f1)"
          }
          EOF
          
      - name: Upload production package
        uses: actions/upload-artifact@v4
        with:
          name: production-package
          path: |
            production-build.tar.gz
            build-info.json
          retention-days: 30

  # 预览构建（用于 PR）
  preview:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build for preview
        run: npm run build
        
      - name: Start preview server
        run: |
          # 启动预览服务器（后台运行）
          npm run preview &
          sleep 10
          
          # 检查服务器是否启动成功
          curl -f http://localhost:4173 || echo "Preview server not accessible"
          
      - name: Comment PR with preview link
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '🚀 Build completed successfully! Preview available at: http://localhost:4173'
            })

  # 部署到 GitHub Pages（可选）
  deploy-pages:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    permissions:
      contents: read
      pages: write
      id-token: write
      
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: vite-build-${{ github.sha }}
          path: dist/
          
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload to Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist/
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
